version: 2.1

commands:
  abort_for_docs:
    steps:
      - run:
          name: Avoid tests for docs
          command: |
            if [[ $CIRCLE_BRANCH == *_docs ]]; then
              echo "Identifies as documents PR, no testing required"
              circleci step halt
            fi

  early_return_for_forked_pull_requests:
    description: >-
      If this build is from a fork, stop executing the current job and return success.
      This is useful to avoid steps that will fail due to missing credentials.
    steps:
      - run:
          name: Early return if this build is from a forked PR
          command: |
            if [[ -n "$CIRCLE_PR_NUMBER" ]]; then
              echo "Nothing to do for forked PRs, so marking this step successful"
              circleci step halt
            fi

  setup-automation:
    steps:
      - run:
          name: Setup automation
          command: |
            git submodule update --init deps/readies
            ./deps/readies/bin/getpy3

  checkout-all:
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive

  build_steps:
    parameters:
      platform:
        type: string
      getredis_params:
        type: string
        default: ""
      build_params:
        type: string
        default: ""
      test_params:
        type: string
        default: ""
    steps:
      - abort_for_docs
      - checkout-all
      - setup-automation
      - run:
          name: Install prerequisites
          command: make setup
      - run:
          name: Install Redis
          command: |
            python3 ./deps/readies/bin/getredis -v 6 --force <<parameters.getredis_params>>
            redis-server --version
      - run:
          name: Build
          command: make build <<parameters.build_params>> SHOW=1
      - run:
          name: Flow Test
          no_output_timeout: 30m
          command: |
            mkdir -p ~/workspace/tests
            make test TEST_REPORT_DIR=$HOME/workspace/tests <<parameters.test_params>> SHOW=1


jobs:
  lint:
    docker:
      - image: redislabsmodules/llvm-toolset:latest
    steps:
      - abort_for_docs
      - checkout-all
      - setup-automation
      - run:
          name: lint
          command: |
            make setup
            make lint

  static-analysis-infer:
    docker:
      - image: redisbench/infer-linux64:1.0.0
    steps:
      - checkout-all
      - run:
          name: run fbinfer
          command: |
            INFER=infer make static-analysis

  valgrind:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - build_steps:
          platform: debian
          build_params: VALGRIND=1 -j
          test_params: VALGRIND=1 SIMPLE=1
          getredis_params: --valgrind

  build:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - build_steps:
          platform: debian
      - early_return_for_forked_pull_requests
      - run:
          name: Persist Artifacts
          command: |
            mkdir -p /workspace/build
            cp $MODULE_ARTIFACT /workspace/
            cp ramp.yml /workspace
      - persist_to_workspace:
          root: /workspace
          paths:
            - '*.so'
            - ramp.yml
            - build

  coverage:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - abort_for_docs
      - checkout-all
      - run:
          name: Build & Test
          command: |
            make setup
            # make build COV=1 SHOW=1
            # make test COV=1
            # bash <(curl -s https://codecov.io/bash) -f bin/linux-x64-debug-cov/cov.info
            make coverage
            bash <(curl -s https://codecov.io/bash)
      #- store_artifacts:
      #    path: coverage
      #    destination: coverage

  deploy_branch:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy to S3
          command: >-
            aws s3 cp /workspace/build/ s3://redismodules/$PACKAGE_NAME/ --acl
            public-read --recursive --exclude "*" --include "*.zip"
  deploy_release:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - abort_for_docs
      - early_return_for_forked_pull_requests
      - attach_workspace:
          at: /workspace
      - run:
          name: Deploy to S3
          command: >-
            aws s3 cp /workspace/build/ s3://redismodules/$PACKAGE_NAME/ --acl
            public-read --recursive --exclude "*" --include "*.zip"

  release_automation:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - abort_for_docs
      - early_return_for_forked_pull_requests
      - checkout
      - setup-automation
      - run:
          name: Run QA Automation
          command: MODULE_VERSION="$CIRCLE_TAG" VERBOSE=1 TEST=release ./tests/qa/run

  nightly_automation:
    docker:
      - image: redisfab/rmbuilder:6.2.1-x64-buster
    steps:
      - abort_for_docs
      - early_return_for_forked_pull_requests
      - checkout
      - setup-automation
      - run:
          name: Run QA Automation
          command: MODULE_VERSION="$CIRCLE_BRANCH" VERBOSE=1 TEST=nightly QUICK=1 ./tests/qa/run


on-any-branch: &on-any-branch
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

never: &never
  filters:
    branches:
      ignore: /.*/
    tags:
      ignore: /.*/

on-master: &on-master
  filters:
    branches:
      only: master
    tags:
      ignore: /.*/

on-integ-branch: &on-integ-branch
  filters:
    branches:
      only:
        - master
        - /^\d+\.\d+.*$/
        - /^feature-.*$/
    tags:
      ignore: /.*/

not-on-integ-branch: &not-on-integ-branch
  filters:
    branches:
      ignore:
        - master
        - /^\d+\.\d+.*$/
        - /^feature-.*$/
    tags:
      ignore: /.*/

on-version-tags: &on-version-tags
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9].*/

on-integ-and-version-tags: &on-integ-and-version-tags
  filters:
    branches:
      only:
        - master
        - /^\d+\.\d+.*$/
        - /^feature-.*$/
    tags:
      only: /^v[0-9].*/


workflows:
  version: 2
  default-flow:
    jobs:
      - lint
      - static-analysis-infer
      - build:
          <<: *on-any-branch
          requires:
            - lint
      - valgrind:
          <<: *on-any-branch
          requires:
            - lint
      - package_branch:
          <<: *on-master
          requires:
            - build
      - package_release:
          <<: *on-version-tags
          requires:
            - build
      - deploy_branch:
          requires:
            - package_branch
      - release_automation:
          requires:
            - deploy_branch
      - deploy_release:
          <<: *on-version-tags
          requires:
            - package_release

  nightly:
    triggers:
      - schedule:
          cron: "07 20 * * *"
          filters:
            branches:
              only: master
    jobs:
      - nightly_automation
